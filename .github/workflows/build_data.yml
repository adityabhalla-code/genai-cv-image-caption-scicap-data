name: create_llava_dataset

on:
#  push:
#    branches:
#      - main
  workflow_dispatch:

jobs:
  run_experiment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Add your dependencies installation here, e.g.:
          # pip install -r requirements.txt

      - name: Set up DVC
        run: |
          sudo apt-get update
          sudo apt-get install -y dvc

      - name: Configure AWS credentials
        run: |
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          echo "[default]" > ~/.aws/config
          echo "region=${{ secrets.AWS_REGION }}" >> ~/.aws/config

      - name: Pull data with DVC
        run: |
          dvc remote modify --local myremote access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          dvc remote modify --local myremote secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          dvc pull

      - name: Load config
        id: load_config
        run: |
          config=$(cat config.json)
          echo "::set-output name=experiment_id::$(echo $config | jq -r '.experiment_id')"
          echo "::set-output name=fig_type::$(echo $config | jq -r '.fig_type')"
          echo "::set-output name=n_train_images::$(echo $config | jq -r '.n_train_images')"
          echo "::set-output name=n_test_images::$(echo $config | jq -r '.n_test_images')"
        shell: bash

      - name: Run Python script
        run: |
          python run_experiment.py \
            --experiment_id ${{ steps.load_config.outputs.experiment_id }} \
            --fig_type ${{ steps.load_config.outputs.fig_type }} \
            --n_train_images ${{ steps.load_config.outputs.n_train_images }} \
            --n_test_images ${{ steps.load_config.outputs.n_test_images }}
